{
	"name": "dataflow1",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "Excel3",
						"type": "DatasetReference"
					},
					"name": "source1"
				},
				{
					"dataset": {
						"referenceName": "Excel2",
						"type": "DatasetReference"
					},
					"name": "source2"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "DelimitedText4",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "Lookup1"
				},
				{
					"name": "Aggregate1"
				},
				{
					"name": "Exists1"
				},
				{
					"name": "Filter1"
				}
			],
			"script": "parameters{\n\tparameter1 as string (concat(\"Pooja\",\"Saravana kumar\")),\n\tparameter2 as string (concat(\"ABirami \",\"Bala subramani\")),\n\tparameter3 as string (concat(\"Logesh\",\"Balasubramani\"))\n}\nsource(output(\n\t\tSno as string,\n\t\tName as string,\n\t\tAge as string,\n\t\tSex as string,\n\t\tDept as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tlimit: 100) ~> source1\nsource(output(\n\t\tDeptID as string,\n\t\tDeptname as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> source2\nsource1, source2 lookup(Dept == Deptname,\n\tmultiple: false,\n\tpickup: 'any',\n\tbroadcast: 'auto')~> Lookup1\nExists1 aggregate(groupBy(Dept),\n\tCount = count(Sex)) ~> Aggregate1\nFilter1 exists(') == ERROR_FUNCTION(',\n\tnegate:false,\n\tbroadcast: 'auto')~> Exists1\nLookup1 filter(Sno=='1') ~> Filter1\nAggregate1 sink(input(\n\t\tpolicy as string,\n\t\tpolicy_id as string,\n\t\t{Primary Key} as string,\n\t\tProp_3 as string,\n\t\tAutogenerated as string,\n\t\tactive_status as string,\n\t\tProp_6 as string,\n\t\tProp_7 as string,\n\t\tProp_8 as string,\n\t\tProp_9 as string,\n\t\t{ABirami Bala subramani10} as string,\n\t\t{ABirami Bala subramani11} as string,\n\t\tLogeshBalasubramani as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tquoteAll: true) ~> sink1"
		}
	}
}